#!/usr/bin/env python
#pylint: skip-file
"""
Copyright 2015 Reverb Technologies, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

class ModuleDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually."""


    def __init__(self):
        """
        Attributes:
          swaggerTypes (dict): The key is attribute name and the value is attribute type.
          attributeMap (dict): The key is attribute name and the value is json key in definition.
        """
        self.swaggerTypes = {

            'isFieldReplaceable': 'str',


            'entityPhysicalIndex': 'str',


            'containmentEntity': 'str',


            'name': 'str',


            'serialNumber': 'str',


            'description': 'str',


            'assemblyNumber': 'str',


            'assemblyRevision': 'str',


            'isReportingAlarmsAllowed': 'str',


            'manufacturer': 'str',


            'operationalStateCode': 'str',


            'partNumber': 'str',


            'vendorEquipmentType': 'str',


            'moduleIndex': 'int',


            'id': 'str',


            'attributeInfo': 'dict'

        }

        self.attributeMap = {

            'isFieldReplaceable': 'isFieldReplaceable',

            'entityPhysicalIndex': 'entityPhysicalIndex',

            'containmentEntity': 'containmentEntity',

            'name': 'name',

            'serialNumber': 'serialNumber',

            'description': 'description',

            'assemblyNumber': 'assemblyNumber',

            'assemblyRevision': 'assemblyRevision',

            'isReportingAlarmsAllowed': 'isReportingAlarmsAllowed',

            'manufacturer': 'manufacturer',

            'operationalStateCode': 'operationalStateCode',

            'partNumber': 'partNumber',

            'vendorEquipmentType': 'vendorEquipmentType',

            'moduleIndex': 'moduleIndex',

            'id': 'id',

            'attributeInfo': 'attributeInfo'

        }


        #To mention if field is replaceable

        self.isFieldReplaceable = None # str

        #Entity physical index of the module

        self.entityPhysicalIndex = None # str

        #Containment entity of the module

        self.containmentEntity = None # str

        #Name of the module

        self.name = None # str

        #Serial number of the module

        self.serialNumber = None # str

        #Description of the module

        self.description = None # str

        #Assembly number of the module

        self.assemblyNumber = None # str

        #Assembly revision of the module

        self.assemblyRevision = None # str

        #To mention if reporting alarms are allowed

        self.isReportingAlarmsAllowed = None # str

        #Manufacturer of the module

        self.manufacturer = None # str

        #Operational state of the module

        self.operationalStateCode = None # str

        #Part number of the module

        self.partNumber = None # str

        #Vendor euipment type of the module

        self.vendorEquipmentType = None # str

        #Index of the module

        self.moduleIndex = None # int

        #Id of the module

        self.id = None # str

        self.attributeInfo = None # dict
