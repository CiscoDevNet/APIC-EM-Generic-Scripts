{
    "resourcePath": "/policy",
    "produces": [
        "application/json"
    ],
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "models": {
        "ActionProperty": {
            "required": [
                "trustLevel",
                "relevanceLevel",
                "pathControlFlag",
                "pathPreferenceFlag",
                "priorityLevel",
                "experienceLevel",
                "pathPreference"
            ],
            "properties": {
                "pathControlFlag": {
                    "type": "boolean",
                    "description": "path control flag"
                },
                "SecondaryPathPref": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "PathOfLastResort": {
                    "type": "string"
                },
                "pathPreference": {
                    "type": "string",
                    "description": "path preference for a policy"
                },
                "destinations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "relevanceLevel": {
                    "type": "string",
                    "description": "relevance level for a policy"
                },
                "pathPreferenceFlag": {
                    "type": "boolean",
                    "description": "path preference flag"
                },
                "maintainExperience": {
                    "type": "string"
                },
                "priorityLevel": {
                    "type": "string",
                    "description": "priority level for a policy"
                },
                "PrimaryPathPref": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "TertiaryPathPref": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "trustLevel": {
                    "type": "string",
                    "description": "trust level for a policy"
                },
                "experienceLevel": {
                    "type": "string",
                    "description": "experience level for a policy"
                }
            },
            "description": "",
            "id": "ActionProperty",
            "extends": ""
        },
        "VersionDiffDTO": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "PolicyDiffDTO"
                    },
                    "type": "array",
                    "description": "Policies from the cached diff. This attribute enables the user to make changes to the diffs that he can post for rollback."
                },
                "id": {
                    "type": "string",
                    "description": "Id of the cached diff. Use id in the post api if you don't want to make any modifications to the diff corresponding to the diff id."
                }
            },
            "description": "",
            "id": "VersionDiffDTO",
            "extends": ""
        },
        "FlowIdResponse": {
            "properties": {
                "flowId": {
                    "type": "string"
                },
                "taskId": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "FlowIdResponse",
            "extends": ""
        },
        "NetworkUser": {
            "properties": {
                "applications": {
                    "items": {
                        "$ref": "PolicyApplication"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "applicationDiffs": {
                    "items": {
                        "$ref": "PolicyApplicationDiffDTO"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "categories": {
                    "items": {
                        "$ref": "CategoryDTO"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "deviceTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "locations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "userIdentifiers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "description": "",
            "id": "NetworkUser",
            "extends": ""
        },
        "PolicyListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "Policy"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyListResult",
            "extends": ""
        },
        "Policy": {
            "required": [
                "policyScope",
                "resource",
                "id",
                "policyName",
                "actionProperty",
                "taskId",
                "policyPriority",
                "actions",
                "networkUser",
                "policyOwner"
            ],
            "properties": {
                "state": {
                    "type": "string"
                },
                "networkUser": {
                    "$ref": "NetworkUser",
                    "description": "Network User"
                },
                "policyOwner": {
                    "type": "string",
                    "description": "Policy Owner"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "policyName": {
                    "type": "string",
                    "description": "name of the policy"
                },
                "policyPriority": {
                    "type": "integer",
                    "description": "Policy Priority",
                    "format": "int32"
                },
                "instanceUuid": {
                    "type": "string",
                    "description": ""
                },
                "taskId": {
                    "type": "string",
                    "description": "Task ID"
                },
                "scopeWirelessSegment": {
                    "type": "string"
                },
                "actionProperty": {
                    "$ref": "ActionProperty",
                    "description": "ActionProperty"
                },
                "actions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Action Set",
                    "uniqueItems": true
                },
                "resource": {
                    "$ref": "PolicyResource",
                    "description": "Resource"
                },
                "policyScope": {
                    "type": "string",
                    "description": "policyScope"
                }
            },
            "description": "",
            "id": "Policy",
            "extends": ""
        },
        "PolicyApplicationListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "PolicyApplication"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyApplicationListResult",
            "extends": ""
        },
        "PolicyVersionNumberListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "VersionNumberDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyVersionNumberListResult",
            "extends": ""
        },
        "PolicyApplicationDiffDTO": {
            "properties": {
                "operation": {
                    "enum": [
                        "CREATE",
                        "UPDATE",
                        "DELETE"
                    ],
                    "type": "string",
                    "description": "operation"
                },
                "policyApplication": {
                    "$ref": "PolicyApplication",
                    "description": "application"
                }
            },
            "description": "",
            "id": "PolicyApplicationDiffDTO",
            "extends": ""
        },
        "PolicyFlowSettingResult": {
            "properties": {
                "response": {
                    "$ref": "PolicyFlowSettingDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyFlowSettingResult",
            "extends": ""
        },
        "FlowResult": {
            "properties": {
                "response": {
                    "$ref": "FlowDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "FlowResult",
            "extends": ""
        },
        "PolicyResult": {
            "properties": {
                "response": {
                    "$ref": "Policy"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyResult",
            "extends": ""
        },
        "PolicyTagAssociationDTO": {
            "properties": {
                "networkDevices": {
                    "items": {
                        "$ref": "PolicyTagAssociationDeviceDTO"
                    },
                    "type": "array"
                },
                "unModifiable": {
                    "type": "boolean"
                },
                "unModifiableReason": {
                    "type": "string"
                },
                "policyTag": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyTagAssociationDTO",
            "extends": ""
        },
        "PolicyTagAssociationListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "PolicyTagAssociationDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyTagAssociationListResult",
            "extends": ""
        },
        "VersionDiffResult": {
            "properties": {
                "response": {
                    "$ref": "VersionDiffDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "VersionDiffResult",
            "extends": ""
        },
        "PolicyIntentSummaryDTO": {
            "required": [
                "operations",
                "applicationsStale",
                "policyScope",
                "lastUpdateTime",
                "latestPolicyVersion",
                "numberOfAssignedApplications",
                "numberOfDevices",
                "allPoliciesDeleted"
            ],
            "properties": {
                "operations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "The operations in that version. (policy-add, policy-update, policy-delete)"
                },
                "allPoliciesDeleted": {
                    "type": "boolean",
                    "description": "Flag to indicate if all policies are deleted in the policy scope"
                },
                "numberOfAssignedApplications": {
                    "type": "integer",
                    "description": "The number of assigned applications in the policy",
                    "format": "int64"
                },
                "policyScope": {
                    "type": "string",
                    "description": "Scope of the policy"
                },
                "numberOfDevices": {
                    "type": "integer",
                    "description": "The number of devices in the policy scope",
                    "format": "int64"
                },
                "lastUpdateTime": {
                    "type": "integer",
                    "description": "Last update time of the policy",
                    "format": "int64"
                },
                "applicationsStale": {
                    "type": "boolean",
                    "description": "Flag to indicate if applications are stale in the policy"
                },
                "scopeWirelessSegment": {
                    "type": "string",
                    "description": "Wireless segment of the policy"
                },
                "latestPolicyVersion": {
                    "type": "integer",
                    "description": "Latest version of the policy",
                    "format": "int64"
                }
            },
            "description": "",
            "id": "PolicyIntentSummaryDTO",
            "extends": ""
        },
        "TaskIdResponse": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "taskId": {
                    "$ref": "TaskId"
                }
            },
            "description": "",
            "id": "TaskIdResponse",
            "extends": ""
        },
        "PolicyStatusListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "PolicyStatusDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyStatusListResult",
            "extends": ""
        },
        "PolicyIntentSummaryDTOResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "PolicyIntentSummaryDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyIntentSummaryDTOResult",
            "extends": ""
        },
        "PolicyStatusDTO": {
            "properties": {
                "businessIrrelevantApplications": {
                    "items": {
                        "$ref": "PolicyApplication"
                    },
                    "type": "array"
                },
                "policyVersion": {
                    "type": "string"
                },
                "outOfScope": {
                    "type": "boolean"
                },
                "failureReason": {
                    "type": "string"
                },
                "networkDeviceName": {
                    "type": "string"
                },
                "networkDeviceIp": {
                    "type": "string"
                },
                "scopeWirelessSegment": {
                    "type": "string"
                },
                "businessRelevantApplications": {
                    "items": {
                        "$ref": "PolicyApplication"
                    },
                    "type": "array"
                },
                "businessIrrelevantConsumerProducerApplications": {
                    "items": {
                        "$ref": "PolicyConsumerProducerApplication"
                    },
                    "type": "array"
                },
                "instanceUuid": {
                    "type": "string"
                },
                "businessRelevantConsumerProducerApplications": {
                    "items": {
                        "$ref": "PolicyConsumerProducerApplication"
                    },
                    "type": "array"
                },
                "networkDeviceId": {
                    "type": "string"
                },
                "lastSuccessfulPolicyVersion": {
                    "type": "string"
                },
                "policyScope": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "applicationPolicyCount": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "description": "",
            "id": "PolicyStatusDTO",
            "extends": ""
        },
        "PolicyTagAssociationDeviceDTO": {
            "properties": {
                "deviceIp": {
                    "type": "string"
                },
                "unAssigned": {
                    "type": "boolean"
                },
                "restricted": {
                    "type": "boolean"
                },
                "deviceName": {
                    "type": "string"
                },
                "restrictedReason": {
                    "type": "string"
                },
                "deviceType": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyTagAssociationDeviceDTO",
            "extends": ""
        },
        "TaskId": {
            "properties": {},
            "description": "",
            "id": "TaskId",
            "extends": ""
        },
        "FlowDTO": {
            "required": [
                "flowType",
                "sourceIP"
            ],
            "properties": {
                "flowType": {
                    "type": "string",
                    "description": "flowType"
                },
                "clientReference": {
                    "type": "string",
                    "description": "clientReference (can be used by the client as a reference to this resource"
                },
                "destIP": {
                    "type": "string",
                    "description": "destIP"
                },
                "matchDSCP": {
                    "type": "string",
                    "description": "DSCP of the flow"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "interfaceId"
                },
                "sourceIP": {
                    "type": "string",
                    "description": "sourceIP"
                },
                "averageBandwidth": {
                    "type": "string",
                    "description": "averageBandwidth in kbps (min: 0, max: 2147483647 kbps)"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "sourcePort"
                },
                "applicationName": {
                    "type": "string",
                    "description": "APIC-EM application name"
                },
                "networkDeviceName": {
                    "type": "string",
                    "description": "networkDeviceName"
                },
                "failureReason": {
                    "type": "string"
                },
                "codec": {
                    "type": "string",
                    "description": "codec"
                },
                "networkDeviceId": {
                    "type": "string",
                    "description": "networkDeviceId"
                },
                "protocol": {
                    "type": "string",
                    "description": "protocol"
                },
                "status": {
                    "type": "string"
                },
                "destPort": {
                    "type": "string",
                    "description": "destPort"
                },
                "detailedFlowType": {
                    "type": "string",
                    "description": "detailedFlowType (more detailed classification than flowType)"
                },
                "interfaceName": {
                    "type": "string",
                    "description": "interfaceName"
                },
                "peakBandwidth": {
                    "type": "string",
                    "description": "peakBandwidth in kbps (min: 0, max: 2147483647 kbps)"
                }
            },
            "description": "",
            "id": "FlowDTO",
            "extends": ""
        },
        "VersionNumberDTO": {
            "properties": {
                "createTime": {
                    "type": "integer",
                    "description": "time at which the version was created",
                    "format": "int64"
                },
                "version": {
                    "type": "integer",
                    "description": "version number",
                    "format": "int64"
                },
                "policyChanged": {
                    "type": "boolean",
                    "description": "true if the version was created as a result of put/post/delete on the policy"
                }
            },
            "description": "",
            "id": "VersionNumberDTO",
            "extends": ""
        },
        "PolicyTagListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "PolicyTagDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyTagListResult",
            "extends": ""
        },
        "FlowIdResult": {
            "properties": {
                "response": {
                    "$ref": "FlowIdResponse"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "FlowIdResult",
            "extends": ""
        },
        "PolicyTagDTO": {
            "required": [
                "policyTag"
            ],
            "properties": {
                "policyTag": {
                    "type": "string",
                    "description": "Policy Tag value"
                }
            },
            "description": "",
            "id": "PolicyTagDTO",
            "extends": ""
        },
        "CategoryDTO": {
            "required": [
                "name",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "Category Name"
                }
            },
            "description": "",
            "id": "CategoryDTO",
            "extends": ""
        },
        "PolicyApplication": {
            "required": [
                "id"
            ],
            "properties": {
                "raw": {
                    "type": "string",
                    "description": "Either raw Application of the form port:protocol should be specified or appId should be specified"
                },
                "appName": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "stale": {
                    "type": "boolean",
                    "description": "Indicates whether the application has been updated since the last time this policy was provisioned"
                }
            },
            "description": "",
            "id": "PolicyApplication",
            "extends": ""
        },
        "CountResult": {
            "properties": {
                "response": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "CountResult",
            "extends": ""
        },
        "FlowListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "FlowDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "FlowListResult",
            "extends": ""
        },
        "PolicyFlowSettingDTO": {
            "required": [
                "flowPolicyEnabled"
            ],
            "properties": {
                "flowPolicyEnabled": {
                    "type": "boolean",
                    "description": "Allowed values are true, false"
                }
            },
            "description": "",
            "id": "PolicyFlowSettingDTO",
            "extends": ""
        },
        "PolicyResource": {
            "properties": {
                "applications": {
                    "items": {
                        "$ref": "PolicyApplication"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "applicationDiffs": {
                    "items": {
                        "$ref": "PolicyApplicationDiffDTO"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "categories": {
                    "items": {
                        "$ref": "CategoryDTO"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "deviceTypes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "locations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                },
                "userIdentifiers": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "description": "",
            "id": "PolicyResource",
            "extends": ""
        },
        "PolicyDiffDTO": {
            "properties": {
                "policy": {
                    "$ref": "Policy",
                    "description": "policy"
                },
                "operation": {
                    "enum": [
                        "CREATE",
                        "UPDATE",
                        "DELETE"
                    ],
                    "type": "string",
                    "description": "operation"
                }
            },
            "description": "",
            "id": "PolicyDiffDTO",
            "extends": ""
        },
        "PolicyConsumerProducerApplication": {
            "properties": {
                "producerApplication": {
                    "$ref": "PolicyApplication"
                },
                "consumerApplication": {
                    "$ref": "PolicyApplication"
                }
            },
            "description": "",
            "id": "PolicyConsumerProducerApplication",
            "extends": ""
        },
        "TaskIdResult": {
            "properties": {
                "response": {
                    "$ref": "TaskIdResponse"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "TaskIdResult",
            "extends": ""
        },
        "PolicyTagAssociationDeviceListResult": {
            "properties": {
                "response": {
                    "items": {
                        "$ref": "PolicyTagAssociationDeviceDTO"
                    },
                    "type": "array"
                },
                "version": {
                    "type": "string"
                }
            },
            "description": "",
            "id": "PolicyTagAssociationDeviceListResult",
            "extends": ""
        }
    },
    "swaggerVersion": "1.2",
    "apiVersion": "1.0",
    "apis": [
        {
            "operations": [
                {
                    "notes": "Get policy(s) based on a filter provided",
                    "nickname": "getFilterPolicies",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given wireless segment, within a policyScope (policyScope is mandatory for this)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "applicationId",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given Resource Application Id"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyListResult",
                    "summary": "Retrieves policies based on a given filter"
                }
            ],
            "description": "getFilterPolicies",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "notes": "Delete policies based on a given filter",
                    "nickname": "deleteFilterPolicies",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "DELETE",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Delete policies for a given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Delete policies for a given wireless segment, within a policyScope (policyScope is mandatory for this)"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete policies based on a given filter"
                }
            ],
            "description": "deleteFilterPolicies",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "notes": "Update a policy",
                    "nickname": "update",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "PUT",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scheduleAt",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the policy should be scheduled (Optional) "
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scheduleDesc",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Custom Description (Optional)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scheduleOrigin",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Originator of this call (Optional)"
                        },
                        {
                            "required": true,
                            "allowMultiple": false,
                            "items": {
                                "$ref": "Policy"
                            },
                            "name": "policyList",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "array",
                            "description": "Policy Object"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Update policy(s)"
                }
            ],
            "description": "update",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "notes": "Create a policy",
                    "nickname": "add",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "POST",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scheduleAt",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the policy should be scheduled (Optional) "
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scheduleDesc",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Custom Description (Optional)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scheduleOrigin",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Originator of this call (Optional)"
                        },
                        {
                            "required": true,
                            "allowMultiple": false,
                            "items": {
                                "$ref": "Policy"
                            },
                            "name": "policyList",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "array",
                            "description": "Policy Object"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This Request is Accepted",
                            "code": 202
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Create policy(s)"
                }
            ],
            "description": "add",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "notes": "Get total count of policies",
                    "nickname": "getCount",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "responseModel": "CountResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Return total count of policies"
                }
            ],
            "description": "getCount",
            "path": "/policy/count"
        },
        {
            "operations": [
                {
                    "notes": "This will return the list of policies diffs for a given version and scope. Each element will be a wrapper on existing policy type and existing application type. The policy wrapper in addition to policy will have an operation enum (CREATE, UPDATE, DELETE). CREATE means the policy existed on the selected version but does not exist in the current version. DELETE means the policy did not exist in the selected version but exists in the current version. UPDATE means the policy exists in both versions. Application wrapper has the same semantics for CREATE, UPDATE, DELETE",
                    "nickname": "getPolicyDiff",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "version",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policy diffs for the given version"
                        },
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policy diffs for the given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policy diffs for the given scopeWirelessSegment"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "VersionDiffResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "VersionDiffResult",
                    "summary": "Retrieves the policy diff"
                }
            ],
            "description": "getPolicyDiff",
            "path": "/policy/diff"
        },
        {
            "operations": [
                {
                    "notes": "The body of the request will contain a list of policy wrappers as obtained by the GET /policy/diff api for a given version. This request will create and apply a new version of the policies. Id and policies in VersionDiffDTO are optional params. But one of them have to be specified. If policies is specified id is ignored.",
                    "nickname": "addPolicyDiff",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "POST",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "versionDiffDTO",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "VersionDiffDTO",
                            "description": "VersionDiff"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This Request is Accepted",
                            "code": 202
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Adds the policy diff"
                }
            ],
            "description": "addPolicyDiff",
            "path": "/policy/diff"
        },
        {
            "operations": [
                {
                    "notes": "deleteFlowsByClientReference",
                    "nickname": "deleteFlowsByClientReference",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "DELETE",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "clientReference",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "clientReference"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Deletes flows based on clientReference prefix"
                }
            ],
            "description": "deleteFlowsByClientReference",
            "path": "/policy/flow"
        },
        {
            "operations": [
                {
                    "notes": "getFlows",
                    "nickname": "getFlows",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "FlowListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "FlowListResult",
                    "summary": "Retrieves flows with search criteria"
                }
            ],
            "description": "getFlows",
            "path": "/policy/flow"
        },
        {
            "operations": [
                {
                    "notes": "addFlow",
                    "nickname": "addFlow",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "POST",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "flowDTO",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "FlowDTO",
                            "description": "flowDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "FlowIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This Request is Accepted",
                            "code": 202
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "FlowIdResult",
                    "summary": "Creates a new traffic flow for which qos policies will be applied"
                }
            ],
            "description": "addFlow",
            "path": "/policy/flow"
        },
        {
            "operations": [
                {
                    "notes": "getFlowCount",
                    "nickname": "getFlowCount",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "responseModel": "CountResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the number of flows"
                }
            ],
            "description": "getFlowCount",
            "path": "/policy/flow/count"
        },
        {
            "operations": [
                {
                    "notes": "updateFlowPolicySetting",
                    "nickname": "updateFlowPolicySetting",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "PUT",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyFlowSettingDTO",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "PolicyFlowSettingDTO",
                            "description": "policyFlowSettingDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Update the dynamic policy flow setting. This setting will be used to allow/disallow dynamic flows /policy/flow requests."
                }
            ],
            "description": "updateFlowPolicySetting",
            "path": "/policy/flow/setting"
        },
        {
            "operations": [
                {
                    "notes": "getPolicyFlowSetting",
                    "nickname": "getPolicyFlowSetting",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyFlowSettingResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyFlowSettingResult",
                    "summary": "Retrieves dynamic policy flow setting"
                }
            ],
            "description": "getPolicyFlowSetting",
            "path": "/policy/flow/setting"
        },
        {
            "operations": [
                {
                    "notes": "Delete a policy for the flow by its id",
                    "nickname": "deleteFlow",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "DELETE",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "id",
                            "paramType": "path",
                            "defaultValue": "",
                            "type": "string",
                            "description": "id"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete a policy for the flow by its id"
                }
            ],
            "description": "deleteFlow",
            "path": "/policy/flow/{id}"
        },
        {
            "operations": [
                {
                    "notes": "getFlow",
                    "nickname": "getFlow",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "id",
                            "paramType": "path",
                            "defaultValue": "",
                            "type": "string",
                            "description": "id"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "FlowResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "FlowResult",
                    "summary": "Retrieves a flow by its id"
                }
            ],
            "description": "getFlow",
            "path": "/policy/flow/{id}"
        },
        {
            "operations": [
                {
                    "notes": "Get the policy intent summary based on a given filter",
                    "nickname": "getPolicyIntentSummary",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve the policy intent summary based on a given policyScope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve the policy intent summary based on a given scopeWirelessSegment given the policyScope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyIntentSummaryDTOResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyIntentSummaryDTOResult",
                    "summary": "Retrieves the policy intent summary based on a given filter"
                }
            ],
            "description": "getPolicyIntentSummary",
            "path": "/policy/intent/summary"
        },
        {
            "operations": [
                {
                    "notes": "Get applications(s) based on a filter provided",
                    "nickname": "getAssignedPolicyApplications",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given policyScope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given wireless segment, within a policyScope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "stale",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Indicates whether the retrieved applications have/have not been updated since the last time the policy was provisioned. If unspecified, both will be returned"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyApplicationListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyApplicationListResult",
                    "summary": "Retrieves Assigned applications that are (or aren't) stale in policies for a given policyScope & scopeWirelessSegment based on a given filter"
                }
            ],
            "description": "getAssignedPolicyApplications",
            "path": "/policy/intent/summary/application/assigned"
        },
        {
            "operations": [
                {
                    "notes": "Get applications(s) based on a filter provided",
                    "nickname": "getUnassignedPolicyApplications",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given policyScope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given wireless segment, within a policyScope"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyApplicationListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyApplicationListResult",
                    "summary": "Retrieves Unassigned applications for a given policyScope & scopeWirelessSegment"
                }
            ],
            "description": "getUnassignedPolicyApplications",
            "path": "/policy/intent/summary/application/unassigned"
        },
        {
            "operations": [
                {
                    "notes": "Get policy status(s) based on filter(s) provided. Either provide networkDeviceId or provide policyScope, offset, limit",
                    "nickname": "getPolicyStatus",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "networkDeviceId",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given networkDeviceId"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policies for a given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return (Use smaller limit value for better response times. Max 50)"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyStatusListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyStatusListResult",
                    "summary": "Retrieves policy statuses based on a given filter"
                }
            ],
            "description": "getPolicyStatus",
            "path": "/policy/status"
        },
        {
            "operations": [
                {
                    "notes": "Get count of policy status(es) based on a given policyScope & scopeWirelessSegment",
                    "nickname": "getCountByPolicyScope",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve count of policy status(es) based on a given policyScope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve count of policy status(es) based on a given scopeWirelessSegment"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "CountResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves count of policy status(es) based on a given policyScope & scopeWirelessSegment"
                }
            ],
            "description": "getCountByPolicyScope",
            "path": "/policy/status/count"
        },
        {
            "operations": [
                {
                    "notes": "Get policy status(s) summary based on a filter provided",
                    "nickname": "getPolicyStatusSummary",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policy status(es) for a given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return (Use smaller limit value for better response times. Max 50)"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyStatusListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyStatusListResult",
                    "summary": "Retrieves policy statuses summary based on a given filter"
                }
            ],
            "description": "getPolicyStatusSummary",
            "path": "/policy/status/summary"
        },
        {
            "operations": [
                {
                    "notes": "addPolicyTag",
                    "nickname": "addPolicyTag",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "POST",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyTagDTO",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "PolicyTagDTO",
                            "description": "policyTagDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This Request is Accepted",
                            "code": 202
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Create a policy tag"
                }
            ],
            "description": "addPolicyTag",
            "path": "/policy/tag"
        },
        {
            "operations": [
                {
                    "notes": "deletePolicyTag",
                    "nickname": "deletePolicyTag",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "DELETE",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyTag",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Policy Tag"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete a policy tag."
                }
            ],
            "description": "deletePolicyTag",
            "path": "/policy/tag"
        },
        {
            "operations": [
                {
                    "notes": "getPolicyTags",
                    "nickname": "getPolicyTags",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyTag",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "policyTag search substring"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "filterOperation",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "type of search (startsWith, endsWith, contains"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyTagListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyTagListResult",
                    "summary": "Retrieves policy tags"
                }
            ],
            "description": "getPolicyTags",
            "path": "/policy/tag"
        },
        {
            "operations": [
                {
                    "notes": "getPolicyTagAssociation",
                    "nickname": "getPolicyTagAssociation",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyTag",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Policy Tag"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "networkDeviceId",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Network device Id"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "networkDevices+restricted",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Restricted Flag"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyTagAssociationListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyTagAssociationListResult",
                    "summary": "Retrieves network device ids that have the policy tag"
                }
            ],
            "description": "getPolicyTagAssociation",
            "path": "/policy/tag/association"
        },
        {
            "operations": [
                {
                    "notes": "addPolicyTagAssociation",
                    "nickname": "addPolicyTagAssociation",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "POST",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyTagAssociationDTO",
                            "paramType": "body",
                            "defaultValue": "",
                            "type": "PolicyTagAssociationDTO",
                            "description": "policyTagAssociationDTO"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This Request is Accepted",
                            "code": 202
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Add a policy tag to network devices."
                }
            ],
            "description": "addPolicyTagAssociation",
            "path": "/policy/tag/association"
        },
        {
            "operations": [
                {
                    "notes": "deletePolicyTagAssociation",
                    "nickname": "deletePolicyTagAssociation",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "DELETE",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyTag",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Policy Tag"
                        },
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "networkDeviceId",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "NetworkDeviceId"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Remove a policy tag from network device."
                }
            ],
            "description": "deletePolicyTagAssociation",
            "path": "/policy/tag/association"
        },
        {
            "operations": [
                {
                    "notes": "Retrieves network devices in policy tags based on filters.",
                    "nickname": "getPolicyTagAssociationNetworkDevices",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "unAssigned",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Boolean to indicate if the device is currently not assigned to any policy tag."
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyTagAssociationDeviceListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyTagAssociationDeviceListResult",
                    "summary": "Retrieves network devices in policy tags based on filters."
                }
            ],
            "description": "getPolicyTagAssociationNetworkDevices",
            "path": "/policy/tag/association/network-device"
        },
        {
            "operations": [
                {
                    "notes": "Retrieves the number of network devices in policy tags based on filters.",
                    "nickname": "getPolicyTagAssociationNetworkDevicesCount",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "unAssigned",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Boolean to indicate if the device is currently not assigned to any policy tag."
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "CountResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the number of network devices in policy tags based on filters."
                }
            ],
            "description": "getPolicyTagAssociationNetworkDevicesCount",
            "path": "/policy/tag/association/network-device/count"
        },
        {
            "operations": [
                {
                    "notes": "getPolicyTagsCount",
                    "nickname": "getPolicyTagsCount",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [],
                    "responseMessages": [
                        {
                            "responseModel": "CountResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the number of policy tags"
                }
            ],
            "description": "getPolicyTagsCount",
            "path": "/policy/tag/count"
        },
        {
            "operations": [
                {
                    "notes": "Retrieves the policy version numbers. The first element in the list is the current version. The versions are in descending order.",
                    "nickname": "getPolicyVersionNumbers",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policy version numbers for the given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve policy version numbers for the given scopeWirelessSegment"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "offset",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Starting index of the resources (1 based)"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "limit",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Number of resources to return"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyVersionNumberListResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyVersionNumberListResult",
                    "summary": "Retrieves the policy version numbers."
                }
            ],
            "description": "getPolicyVersionNumbers",
            "path": "/policy/version"
        },
        {
            "operations": [
                {
                    "notes": "Retrieves the count of policy version numbers.",
                    "nickname": "getPolicyVersionNumbersCount",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "policyScope",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve the count of policy version numbers for the given scope"
                        },
                        {
                            "required": false,
                            "allowMultiple": false,
                            "name": "scopeWirelessSegment",
                            "paramType": "query",
                            "defaultValue": "",
                            "type": "string",
                            "description": "Retrieve the count of policy version numbers for the given scopeWirelessSegment"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "CountResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the count of policy version numbers."
                }
            ],
            "description": "getPolicyVersionNumbersCount",
            "path": "/policy/version/count"
        },
        {
            "operations": [
                {
                    "notes": "Delete a policy by id",
                    "nickname": "delete",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "DELETE",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "id",
                            "paramType": "path",
                            "defaultValue": "",
                            "type": "string",
                            "description": "id"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "TaskIdResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Deletes a policy by its id"
                }
            ],
            "description": "delete",
            "path": "/policy/{id}"
        },
        {
            "operations": [
                {
                    "notes": "Get a policy by id",
                    "nickname": "get",
                    "produces": [
                        "application/json"
                    ],
                    "deprecated": "false",
                    "method": "GET",
                    "parameters": [
                        {
                            "required": true,
                            "allowMultiple": false,
                            "name": "id",
                            "paramType": "path",
                            "defaultValue": "",
                            "type": "string",
                            "description": "id"
                        }
                    ],
                    "responseMessages": [
                        {
                            "responseModel": "PolicyResult",
                            "message": "This Request is OK",
                            "code": 200
                        },
                        {
                            "message": "This user is Forbidden Access to this Resource",
                            "code": 403
                        },
                        {
                            "message": "Not Authorized Yet, Credentials to be supplied",
                            "code": 401
                        },
                        {
                            "message": "No Resource Found",
                            "code": 404
                        }
                    ],
                    "type": "PolicyResult",
                    "summary": "Retrieves a policy based on its id"
                }
            ],
            "description": "get",
            "path": "/policy/{id}"
        }
    ]
}