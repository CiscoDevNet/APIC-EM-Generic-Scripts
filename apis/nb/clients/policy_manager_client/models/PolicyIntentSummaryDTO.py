#!/usr/bin/env python
#pylint: skip-file
"""
Copyright 2015 Reverb Technologies, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

class PolicyIntentSummaryDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually."""


    def __init__(self):
        """
        Attributes:
          swaggerTypes (dict): The key is attribute name and the value is attribute type.
          attributeMap (dict): The key is attribute name and the value is json key in definition.
        """
        self.swaggerTypes = {
            
            'operations': 'list[str]',
            
            
            'applicationsStale': 'bool',
            
            
            'policyScope': 'str',
            
            
            'scopeWirelessSegment': 'str',
            
            
            'lastUpdateTime': 'int',
            
            
            'latestPolicyVersion': 'int',
            
            
            'numberOfAssignedApplications': 'int',
            
            
            'numberOfDevices': 'int',
            
            
            'allPoliciesDeleted': 'bool',


            'bandwidthProfileStale': 'bool',


            'serviceProviderProfileStale': 'bool'
            
        }

        self.attributeMap = {
            
            'operations': 'operations',
            
            'applicationsStale': 'applicationsStale',
            
            'policyScope': 'policyScope',
            
            'scopeWirelessSegment': 'scopeWirelessSegment',
            
            'lastUpdateTime': 'lastUpdateTime',
            
            'latestPolicyVersion': 'latestPolicyVersion',
            
            'numberOfAssignedApplications': 'numberOfAssignedApplications',
            
            'numberOfDevices': 'numberOfDevices',
            
            'allPoliciesDeleted': 'allPoliciesDeleted',

            'bandwidthProfileStale': 'bandwidthProfileStale',

            'serviceProviderProfileStale': 'serviceProviderProfileStale'
            
        }       

        
        #The operations in that version. (policy-add, policy-update, policy-delete)
        
        self.operations = None # list[str]
        
        #Flag to indicate if applications are stale in the policy
        
        self.applicationsStale = None # bool
        
        #Scope of the policy
        
        self.policyScope = None # str
        
        #Wireless segment of the policy
        
        self.scopeWirelessSegment = None # str
        
        #Last update time of the policy
        
        self.lastUpdateTime = None # int
        
        #Latest version of the policy
        
        self.latestPolicyVersion = None # int
        
        #The number of assigned applications in the policy
        
        self.numberOfAssignedApplications = None # int
        
        #The number of devices in the policy scope
        
        self.numberOfDevices = None # int
        
        #Flag to indicate if all policies are deleted in the policy scope
        
        self.allPoliciesDeleted = None # bool

        #Flag to indicate if Bandwidth Profile associated with the policy is stale

        self.bandwidthProfileStale = None # bool

        #Flag to indicate if Service Provider Profiles are stale in the policy scope

        self.serviceProviderProfileStale = None # bool
        
